


d2 $ someCyclesBy 0.33 (slow 2) $ rakk "{<1? [~]>, 2/4 3, <4 4*4?>, [~ 5?] 6 7, 8/3?}%<4>"

d2 $ stack [
  n "<c!3 cs>" # dek 7 1 0
, every 3 (const $ someCyclesBy 0.33 (slow 2) $ rakk "{<1? [~]>, 2/4 3, <4 4*4?>, [~ 5?] 6 7, 8/3?}%<4>") $
  rakk "[<1 [1*3?, ~ 5 [6 ~] ~] 1*2>,4*4, <~ 3 [~ ~ 3*2]>]"
, n "{f c g}%<4 2>" # dek 5 1 3
] # cps (110/240)




d2 $ stack [
  n "c cs" # dek 7 1 0
, rakk "[<1 [1*3?, ~ 5 [6 ~] ~] 1*2>,4*4, <~ 3 [~ ~ 3*2]>]"
] # cps (110/240)

hush





let pats =
      [
        ("a", someCyclesBy 0.44 ((0.5 <~) . iter 2 . (slow 1.5 . chop 3)) $ stack [
          someCyclesBy 0.55 (slow 2 . degradeBy 0.66) $
          someCyclesBy 0.33 (off 0.25 (struct "t(<3 5>,8,<0 0 3>)") . (# legato 0.5)) $
          n (arp "{diverge converge, <down*2 ~>}%<3 6 2>" "<[f'maj7'8 c'six'8] [f'sus2'8 <c'sus4'8 d'm9'8>]>") #
          dek 3 "1 2 0.75 1 3" "4 [3 <5 4>]"
        , struct "<t*2 t>" $ n "<f!7 d>" # dek 5 1 2
        , n "<c!7 cs>" # dek 7 1 0
        ]
        ),
        ("b", someCyclesBy 0.22 ((0.5 <~) . iter 2 . (slow 1.5 . chop 3)) $ stack [
          someCyclesBy 0.55 (slow 2 . degradeBy 0.44) $
          someCyclesBy 0.33 (off 0.5 (struct "t(<3 5>,8,<0 0 3>)") . (# legato 0.5)) $
          n (arp "{converge down, <up*2 ~>}%<6 1 2>" "<a'min7'6 [e,g]'five'8>") #
          dek 3 "1 2 0.75 1 3" "4 [3 4]"
        , struct "<t*2 t>" $ n "<g!7 e>" # dek 5 1 2
        , n "<c!7 cs>" # dek 7 1 0
        ]
        )
      ]
in
d2 $ ur 80 "a b" pats [] # cps (110/240)





d2 $ someCyclesBy 0.33 (chop 3) $ rakk (fit 3 ["1", "3", "8", "7", "4", "6", "5"] "{0 [~ 1] 2 1*4, ~ <1 0>*3}%<6 4>")





let sync = "{0 1*2 <3 2> 2@3 1@2, <1 4> 0@2 1*2}%<16 [8 6]>"
    pats =
      [
        ("a", whenmod 10 4 (slow 2 . iter 2) $ someCyclesBy 0.55 (slow 2 . chop "<2 3 4>") $ stack [
            rakk (fmap (["1","6","7","3","8"]!!) $ sync)
          , slow "1 2" $ off "<0.25 0.5 0.125>" ((# legato 1) . (slow "<4 8 12>" . rev )) $
            n (arp "{diverge converge}%3" "<g'maj9'8 b'm9'8>") #
            dek "[2 3]" 2 "[4 3 5]"
           ]
        ),
        ("b", stack [
            degrade $ someCyclesBy 0.44 (slow 2 . iter 2 . ply 2) $
            rot "<1 0 2>" $
            n (arp "{[diverge down] converge}%<3 2>" "<a'6by9'16 b'm9'16 e'sus4'16>") #
            dek "3" 2 "[4 3]"
          , n "<[g'sus2 [g'maj g'maj9]] [e'sus4 e'm11]>" #
            dek 2 1 "<3>"
          , n "d" # dek 7 1 0
          , rakk "1 3"
          , rakk "{5 6 ~ 7, <4 2/8>}%<16 8>"
           ]
        )
      ]
in
d2 $ ur 16 "a b" pats [] # cps (110/240)


d2 $ iter "<2 4>" $ while "t(<3 5>,16)" (|* amp (range 0.9 0.7 $ slow 12 tri)) $ rot "<1 2 1 3>" $ rakk "{[<1 1*2> <3 ~>], <4*4 4*2>}%<[2 3, <[6 2] [2 1]>]>"


d2 $ stack [
  struct "t*4" $ while "t(<3 2>,16,<3 0>)" (# octave 4) $ n "[g'sus2 g'maj9, <e!2 d!2>]" # dek 2 1 "[3 5 3]"
, rakk "[1 3, [4*8 4*3]]"
, struct "t*4" $ n "<[<e g>]!2 a b>" # dek 5 1 2
]

d2 $ spaceOut [1] $ stack [
  struct "t*4" $ while "t(<3 2>,16,<3 0>)" (# octave 4) $ n "[g'sus2 g'maj9, <e!2 d!2>]" # dek 2 1 "[3 5 3]"
, rakk "[1 3, [4*8 4*3]]"
, n "<[d d d6 d] [a d e fs]>" # dek 5 1 2
]


hush




d2 $ n "<[d d d6 d] [a d e fs]>" # dek 5 1 2

d2 $ stack [
  stack [midibend "[0 8192!2 0!2 -8192]", slow "<[4, 1.5] 2 12 [1, 4] 8>" $ rot "<1 2 3 2>" $ n (arp "<diverge [converge up]>" "<[g'sus2'4 g'maj9'4] [e'9sus4'4 e'm11'4] fs'm7s5'8>")] # dek 3 1 "4 5"
, while "t(5,16)" (|* amp (range 1 0.77 $ slow 12 sine)) $ rot "<1 2 1 2>" $ struct "t(16,8)?" $ rakk "{1*2 ~ [1 3], 4*6}%[4 2]"
, n "<g!6 e d>" # dek 5 1 2
, n "g'sus2" # dek 2 1 4
] # cps (110/240)


hush


d2 $ stack [
  struct (cat [(fill 3 16), (fill 5 12)]) $
  n "[[g'sus2'ii g'maj9'iii], [<[d e] [fs a]>]]" #
  dek 3 1 "3 4 3 4 4 3"
, rakk "{1*4, [~ 4]*4}"
, n "[<[d e] [fs a]>]" # dek 5 1 2
] # cps (110/240)






d2 $ stack [
  someCyclesBy 0.33 (off 0.25 (|+ n 12)) $ slow "4 6 0.5" $ foldEvery [3,4] (slow 2 . iter 2 . (# n "e'sus4(3,4)")) $
  n (arp "<[down converge], [up diverge]>" "a'9sus4'3@2.5 g'maj9'6@3.5") #
  dek 3 "1 0.5 2.5" "4 5 4"
, while "t(<3 4>,8,<0 3 2 1>)" (# octave 3) $ struct (fill 7 16) $ n "<g'sus2 e'sus4 [c'sus4 c'maj] [e'm9 e'five]>" # dek 2 1 4
] # cps (110/240)




do
  let sync = "t(<5 7 9>,16,<0 2>)?"
  d2 $ stack [
    someCyclesBy 0.33 (0.25 <~) $ struct (sync) $ n (arp "updown" "<e'9sus4'6 e'm11'6>") # dek 5 1 2
    , struct (sync) $ rakk "{1 3 1 1,4}%<6 4>"
    , rakk "4*8"
    , n "<a'm11'iii!4 g'm11'ii!4>" # dek 2 1 3
    ] # cps (110/240)

do
  let sync = "t(<5 7 9>,16,<0 2>)?"
  d2 $ stack [
    someCyclesBy 0.33 (0.25 <~) $ struct (sync) $ n (arp "updown" "<e'9sus4'6 e'm11'6>") # dek 5 1 2
    , struct (sync) $ rakk "{1 3 1 1,4}%<6 4>"
    , rakk "4*8"
    , struct (sync) $ n "<a'm11'iii!4 g'm11'ii!4>" # dek 2 1 3
    , someCycles (slow 2) $
      whenmod 5 4 (ply 2 . palindrome) $
      rot "<2 3 1>" $ n "{~ ~ <a f> ~ e*2 ~ g*3@3 <d f> ~ c*4}%<8 2 4 8 16 4>" #
      dek 3 "1 0.25 2 0.5" "4 6 3 5"
    ] # cps (110/240)



d2 $ n "c" # dek 8 1 4

hush
