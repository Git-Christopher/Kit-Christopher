


hush

let sync = ("{1 [1 0] 1*3 {1@2 0 0}%2 0 1@3}%<7 5 3>")
    cPat = "<af'maj9 af'6by9 af'maj7>"
    bPat = "<c c c c c c df>"
    sync' = ("{0 [0 1 1] 1*4 {1@3 0 1}%<3 2> 0 1@4}%<7 5 3>")
    sync'' = ("t*4")
    cPat' = "<f'min7 f'm11 f'm9>"
    bPat' = "<df df df df df df ef>"
    xync = ("t(<3 9 6 12 4 10>,<8 4 12>)")
    pats =
      [
        ("a", stack [
          someCyclesBy 0.33 (slow 2 . (off 0.25 (chop 3))) $
          someCyclesBy 0.55 ((jux rev) . iter 2 . (off 0.0625 (slow 2 . ply 1))) $
          struct "t(<5 7 3>,8)?" $
          n "<bf'min7 [-2,0] [1,3] bf'9sus4>" #
          dek 3 1 "5 4 3"
        , slow 2 $
          n "{af bf df ~ f c}%4" #
          dek 5 1 2
        , n "[f, bf]" #
          dek "<4 4 4 8>" "<2 2 2 8>" "<3 4 [5,3]>" |+
          n "<0 7 0 -7>"
          ]
        ),
        ("b", whenmod 1 8 (rev . iter 2) $ stack [
          someCyclesBy 0.44 (slow 2 . bite 8 "{[6*7 [2*3 1 7 4 5]] [3]}%<4 2>") $
          someCyclesBy 0.33 (iter 3 . ply 1) $
          someCyclesBy 0.55 (mask ("t(<1 3 5 7>,8)?")) $
          n (arp "<[converge down][diverge up]>" "<[df,af'6by9'7] [fs,bf'min7'7]>") #
          dek 3 (range 0.55 4.44 $ slow 11.11 sine) "[<5 4>,3] [<4 5 3>,4]"
        , repeatCycles 4 $
          slow "<1 2>" $
          struct (binaryN 16 "<784512 123654>") $
          n "<bf'min7 [bf,ef'm9] af'6by9>" #
          dek 2 (range 0.77 1.11 $ slow 4.44 sine) "<4 [3,4] 3>"
        , n "<[af bf][fs]>" #
          dek 5 1 "2 3 2 2 3 4"
        , struct "t(<3 5 7>,8,<0 3 1 2>)?" $
          rakk "1"
        , someCyclesBy 0.22 (slow 2 . stutWith 12 (1/36) (|* legato 0.99)) $
          rakk "~ 3"
        , someCyclesBy 0.33 (slow 2 . stripe 2) $
          struct "<t*12 t*16 t*4>" $
          rakk "4"
          ]
        ),
        ("c", stack [
          struct (sync) $
          rakk "1"
        , someCyclesBy 0.33 (iter 2) $
          struct (sync) $
          rakk "4"
        , struct (sync) $
          n (cPat') #
          dek 2 (range 0.44 1 $ slow 22.22 sine) "4 4 4 3 4 3 5 4"
        , struct (sync) $
          n (bPat') #
          dek 5 (range 0.44 1 $ slow 22.22 sine) 3
        , someCyclesBy 0.22 (off (choose [0.125,0.0125]) (iter 8).(stutWith 3 (1/8)(|* legato 0.94))) $
          slow 4 $
          struct (binaryN 16 "45455 79898") $
          n (arp "<down [converge pinkyup]>" "af'6by9'6 [af'maj9'12|f'm9'8]") #
          dek "[<[3,7] 2>]" 1 "3 4"
        , slow 3 $
          struct ((inv)(sync)) $
          rakk "3"
          ]
        ),
        ("d", stack [repeatCycles 3 $
          chop "<[3 4 5] [6 7 8] [9 10 11]>" $
          sometimes (mask "t*16?") $
          n "<f'm11 fs'maj9'ii af'maj9>" #
          dek 2 1 "5 3 4"
        , struct "<t t*3 t t*4 t t(3,8,1)>" $
          n "<f fs af>" #
          dek 5 "0.75 1 1.1 0.5 0.8" "<3 3 3 2>"
        , slow 8 $ stack [whenmod 11 5 (slow 2 . palindrome) $
          n (unwrap $ fit 3 [(arp "converge down" "[bf'min7'6 af'maj9'9]"), (arp "diverge up" "[bf'9sus4'9 f'm11'6]")] "{[0 1*3] 0*4 [3 2*2]}%<2 1>")] #
          dek 3 "0.33 1 2.22" "3 4 3 4 3 4 3"
        , struct "t(2,6)" $
          rakk "1"
        , slow 2 $
          struct "t(2,6,2)" $
          rakk "3"
          ]
        ),
        ("e", whenmod 1 8 (rev . iter 2) $ stack [
          rot "<[1 2] [3 4]>" $
          someCyclesBy 0.33 (slow 2 . bite 8 "{[7*6 2*3] [1*6 5*3]}%<2 4>") $
          struct (xync) $
          n "<bf'min7'iii [bf,ef'm9] af'6by9'iii df'maj9'iii>" #
          dek "3 8" 1 "<3 [3,4] 3 3>"
        , slow 4 $
          struct "t*16" $
          note "bf" #
          dek 5 1 2
        , someCyclesBy 0.55 (trunc 0.33) $
          struct (xync) $
          rakk "1"
        , struct "<t*8 t*4 t*12>" $
          rakk "4"
          ]
        )
      ]
in
d2 $ ur 128 "b" pats [] # cps (115/240)

a b c [d|e]


hush

let pats =
      [
        ("a", stack [struct "<t*8!3 [t*4 t*3]>" $
          n "<<[ef'add9'o,c f] c'm9> af'sus2'o ef'maj9 [f'min7 g'm7s5]>" #
          dek "[2,4]" (range 1 2.5 $ slow 4 sine) 4
        ]
        ),
        ("b", stack [slow "4 2" $
          struct "t(<6 8 3 12>,<4 6>,<0 0 3 1 2>)" $
          someCyclesBy 0.55 (fast 2 . off 0.1625 (arp "[diverge up converge]") . (# dek "[2,3]" 2 "4 [5 3]")) $
          n "<ef'maj [[bf'sus2 c'min] af'sus2] [f'min7 g'm7s5] af'sus2>" #
          dek 2 1 "5 4 3 4 5"
        , slow 2 $
          n "<c cs>" #
          dek 7 1 0
        , rakk "<[1,4] [2]>*<4 8>"
        , n "<<ef bf c> [f af]>" # dek 5 1 2
        ]
        ),
        ("c", while "<f!3 t>" (slow 2 . chunk 2 (rot 1)) $ stack [
          while "<t f>" (slow 4 . off 0.25 (arp "diverge") . (# legato 2)) $
          struct "<t*8 [t*4 t*3]>" $
          n "<<ef'maj c'm9> af'sus2 ef'maj9 [f'min7 g'm7s5]>" #
          dek "2 [4,3]" (range 1 2.5 $ slow 4 sine) "4 5 5 6 3 4 5 4 3"
        , slow 2 $
          n "<[c bf] [af ef]>" #
          dek 5 1 "2 3 3 2 3 2 2 3"
        , struct "t(2,4,<0 3>)" $
          rakk "1"
        , struct "t*8 [t*4 t*3]" $
          rakk "4"
          ]
        ),
        ("d", stack [
          whenmod 4 1 (rev) $ iter "2 4" $ clip "{<2 4>*2 <1 2 3>@2 3*3 <[5 4] [1 4]*2>@2}%<8>"
        , rakk "{<4 7*2>,~ 3/3,1/4}%8"
        , struct "<t*8!3 [t*4 t*3]>" $
          n "<<[ef'add9'o,c f] c'm9> af'sus2'o ef'maj9 [f'min7 g'm7s5]>" #
          dek "[2,4]" (range 1 2.5 $ slow 4 sine) 4
        , n "<af!3 [af bf c df] f!3 [df c af bf]>" # dek 5 1 "2 3"
        ]
        )
      ]
in
d2 $ ur 48 "a b c d" pats [] # cps (115/240)


hush

d2 $ stack [
  clip "{2*2 1@2 3*3 5@2}%<8>"
, rakk "{4}%8"
]


--depot drama
let pats =
      [
        ("a", stack [
            someCyclesBy 0.55 (struct "t*8?") $
            n "<f'sus2 d'min7 c'7sus4 d'min>" # dek 4 1 "4 <3 5 4>"
          ]
        ),
        ("b", stack [
            someCyclesBy 0.55 (struct "t*8?") $
            n "<f'sus2 d'min7 c'7sus4 d'min>" #
            dek 2 1 "4 5 4 4 6 5"
          , n "<f c> <d a g>" #
            dek 5 1 "<[3 2] 2 3>"
            ]
        ),
        ("c", stack [
            stack [
              midibend "<{0 0 -8192 16384 8192 ~ 0 0}%<12 6 1 24> {0 0 0 0}>"
            , n (arp "down" "c'maj'8 [e'm7s5'8 a'min'4]")
            ] # dek "[3,2]" "1 1.5 2 1 3" 3
          , someCyclesBy 0.55 (struct "t*8?") $
            n "<f'sus2 d'min7 c'7sus4 d'min>" #
            dek 2 1 "4 5 4 4 6 5"
          , n "<f c> <d a g>" #
            dek 5 1 "<[3 2] 2 3>"
          ]
        ),
        ("d", stack [
            stack [
              midibend "<{0 0 -8192 16384 8192 ~ 0 0}%<12 6 1 24> {0 0 0 0}>"
            , n (arp "down" "c'maj'8 [e'm7s5'8 a'min'4]")
            ] # dek "[3,2]" "1 1.5 2 1 3" 3
          , someCyclesBy 0.55 (struct "t*8?") $
            n "<f'sus2 d'min7 c'7sus4 d'min>" #
            dek 2 1 "4 5 4 4 6 5"
          , n "<f c> <d a g>" #
            dek 5 1 "<[3 2] 2 3>"
          , rakk "{1 ~ 1*4 ~ ~ 4 3 [7,1], <4*3 4*3 2*2@4>}%4"
          ]
        )
      ]
in
d2 $ ur 64 "d" pats [] # cps (90/240)

















let pats =
      [
        ("a", whenmod 11 5 (const $ stack [struct "t*32?" $
          stack [midibend "{16384 0 0 0 -8192}%3", n (arp "converge" "[df'6by9'4, bf'sus4'6]")] # dek "[2,~ 3]" 3 "4 3"
        , n "ef [df af bf]" # dek 5 1 2
        , cat [rakk "4*4", rakk "1*16"]
          ]) $
          someCyclesBy 0.33 (slow 1.5 . stripe 2) $ stack [
          cat [n "<[df'maj,<af c bf>] fs'sus2>", ("<0.25 0.125>" <~) $
          n (arp "[down|up]" "ef'min'8 f'm7s5'6")] #
          dek "[2,3,4]" 1 "[4 3,2]"
        , rakk "[1,4,2/6]*4"
        ]
        ),
        ("b", someCyclesBy 0.44 (const $ stack [struct "t(12,8)" $
          stack [midibend "{16384 0 0 0 -8192}%3", n (arp "converge" "ef'm9'16")] # dek "[3,8]" 3 "4 3"
        , n "fs [ef af bf]" # dek 5 1 2
        , cat [rakk "7*4", rakk "1*16"]
          ]) $
          someCyclesBy 0.55 (slow 2 . iter 2) $ stack [
          cat [n "<af'sus4 fs'sus2>", ("<0.5>" <~) $
          n (arp "pinkyup converge" "<bf'min7'12, [~ df'six'4]>")] #
          dek "[2,3]" 1.5 "[4 3,2]"
        , rakk "[1,4,2/6]*3"
        , rakk " ~ 3"
        ]
        )
      ]
in
d2 $ ur 64 "a b" pats [] # cps (125/240)








let swingPat = "<t f> f f <[f!3 t]>"
    swingPat' = "<t f> t f <[f!3 t]>"
    pats =
      [
        ("a1", stack [
          struct "t*16" $
          n "[af'sus4,f] [af'sus2,df]" #
          dek 2 1 "<4 5 4 3 4>" |+
          n "<0 5 0 -7>"
        , superimpose (0.25 ~>) . (off 1.25 (id)) $
          struct (swingPat) $
          rakk "4"
          ]
          ),
        ("a2", stack [
          someCyclesBy 0.66 ((# detune 0.66) . (# legato 1.5)) $
          someCyclesBy 0.44 (slow 1.5 . sometimes (jux (+ n "<6 5> <5 6> <0 -1>") . (# accelerate "<-0.2 0.1> <0.1 -0.2> <0 0.2>") . (# octave (choose [4,5,6]) ))) $
          n (arp "converge up" "<[af'sus2'8@3 af'sus4'8@1.5] [af'six'12|df'maj9'12]>") #
          dek 3 1 "3 2 3 3" |+
          n "<0 5 0 -7>"
        , struct "t*16" $
          n "af'sus4 af'sus2" #
          dek 2 1 "<4 5 4 3 4>" |+
          n "<0 5 0 -7>"
        , struct (swingPat) $
          rakk "3"
        , slow 2 $
          struct (inv swingPat) $
          rakk "1"
        , repeatCycles 4 $
          struct "<t*8 t*12>" $
          rakk "4"
        , repeatCycles 2 $
          cat [n "df f@5", n "df fs'five@5"] #
          dek 5 1 3
          ]
          ),
        ("b", stack [
          struct (swingPat) $
          n "af'sus4 af'sus2" #
          dek 3 1 "<4 5 3 4>" |+
          n "<0 5 0 -7>"
        , struct (swingPat) $
          rakk "1"
        , (1 ~>) $ every 4 (# amp 1) $
          struct (inv swingPat) $
          rakk "1" #
          amp 0
        , degradeBy 0.22 $
          struct "t*16" $
          rakk "4"
        , struct (swingPat) $
          cat [n "df", n "fs", n "af"] #
          dek 5 1 2
          ]
          ),
        ("c1", stack [
          off 1.25 (fast "2 1 2") $
          n (arp "pinkydown [down ~ up]" "<f'7sus4'8 f'min7'12@1.5 af'sus4'6@2.5>") #
          dek 3 1 "4 5 3"
        , slow 2 $
          struct "t*6 t*3" $
          n "af'maj" #
          dek 2 1 4
        , struct (swingPat') $
          n "bf" #
          dek 5 1 "2 3"
        , struct "<t*24 t*8>" $
          rakk "4 3"
        , rakk "1"
          ]
          ),
        ("c2", stack [
          off 1.25 (fast "2 1 2") $
          n (arp "pinkyup [up ~ down]" "<f'7sus4'16 f'min7'24@1.5 af'sus4'12@2.5>") #
          dek 3 1 "4 5 3"
        , slow 2 $
          struct "t*6 t*3" $
          n "df'sus2 af'maj fs'sus2 df'maj9" #
          dek "4 2" 1 4
        , struct (swingPat') $
          cat [n "bf", n "af", n "df", n "fs"] #
          dek 5 1 2
        , struct "<t*24 t*8> <t*12 t*16> <t*4 t*36>" $
          rakk "4"
        , rakk "1"
        , someCyclesBy 0.33 (stutWith 16 (1/36) (|* gain 0.97)) $
          struct "t(2,8,<1 3>)" $
          rakk "3"
          ]
          )
      ]
in
d2 $ ur 80 "a1 a2 b c1 c2" pats [] # cps (115/240)




hush

d2 $ slow 2 $ rakk "1 3 4"
